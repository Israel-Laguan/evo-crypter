name: Update Version on PR to Main

on:
  pull_request:
    types: [opened, reopened]
    branches: [ "main", "dev" ]

jobs:
  update-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get current version
        id: get_version
        run: echo "current_version=$(cat version.txt)" >> $GITHUB_OUTPUT

      - name: Update version based on branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

          echo "${{ github.github.base_ref }} ${{ github.event.pull_request.head.ref }}"
          git pull origin ${{ github.event.pull_request.head.ref }} --rebase

          if [[ "${{ github.base_ref }}" == "main" && "${{ github.head_ref }}" == "dev" ]]; then
            NEW_VERSION=$(echo "${{ steps.get_version.outputs.current_version }}" | awk -F. '{ $2 += 1; $3 = 0; print }' OFS=".")
            ./scripts/update_version.sh "$NEW_VERSION"
          elif [[ "${{ github.base_ref }}" == "main" && "${{ github.head_ref }}" =~ ^release/.* ]]; then
            NEW_VERSION=$(echo "${{ steps.get_version.outputs.current_version }}" | awk -F. '{ $1 += 1; $2 = $3 = 0; print }' OFS=".")
            ./scripts/update_version.sh "$NEW_VERSION"
          elif [[ "${{ github.base_ref }}" == "main" && "${{ github.head_ref }}" =~ ^hotfix/.* ]]; then
            NEW_VERSION=$(echo "${{ steps.get_version.outputs.current_version }}" | awk -F. '{ $NF += 1; print }' OFS=".")
            ./scripts/update_version.sh "$NEW_VERSION"
          elif [[ "${{ github.base_ref }}" == "dev" ]]; then
            NEW_VERSION=$(echo "${{ steps.get_version.outputs.current_version }}" | awk -F. '{ $NF += 1; print }' OFS=".")
            ./scripts/update_version.sh "$NEW_VERSION"
          fi

          git add version.txt
          git commit -m "chore: Bump version to $NEW_VERSION"
          git push origin HEAD:${{ github.head_ref }}
